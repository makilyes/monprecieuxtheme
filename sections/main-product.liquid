{% comment %}theme-check-disable TemplateLength{% endcomment %}
{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
{{ 'component-accordion.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-rte.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}


<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<section id="productPage" class="page-width">
  <div class="product grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
    <div class="grid__item product__media-wrapper">
      <slider-component class="slider-mobile-gutter">
        <a class="skip-to-content-link button visually-hidden" href="#ProductInfo-{{ section.id }}">
          {{ "accessibility.skip_to_product_info" | t }}
        </a>
        <ul class="product__media-list grid grid--peek list-unstyled slider slider--mobile" role="list">
          {%- assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' -%}
          {%- if product.selected_or_first_available_variant.featured_media != null -%}
            {%- assign media = product.selected_or_first_available_variant.featured_media -%}
            <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
              {% render 'product-thumbnail', media: media, position: 'featured', loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true %}
            </li>
          {%- endif -%}
          {%- for media in product.media -%}
            {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
              <li class="product__media-item grid__item slider__slide{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                {% render 'product-thumbnail', media: media, position: forloop.index, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true %}
              </li>
            {%- endunless -%}
          {%- endfor -%}
        </ul>
        <div class="slider-buttons no-js-hidden{% if product.media.size < 2 %} small-hide{% endif %}">
          <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'accessibility.previous_slide' | t }}">{% render 'icon-caret' %}</button>
          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">{{ 'accessibility.of' | t }}</span>
            <span class="slider-counter--total">{% if section.settings.hide_variants %}{{ product.media.size | minus: variant_images.size | plus: 1 }}{% else %}{{ product.media.size }}{% endif %}</span>
          </div>
          <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'accessibility.next_slide' | t }}">{% render 'icon-caret' %}</button>
        </div>
      </slider-component>
      {%- if first_3d_model -%}
        <button
          class="button button--full-width product__xr-button"
          type="button"
          aria-label="{{ 'products.product.xr_button_label' | t }}"
          data-shopify-xr
          data-shopify-model3d-id="{{ first_3d_model.id }}"
          data-shopify-title="{{ product.title | escape }}"
          data-shopify-xr-hidden
        >
          {% render 'icon-3d-model' %}
          {{ 'products.product.xr_button' | t }}
        </button>
      {%- endif -%}
    </div>
    <div class="product__info-wrapper grid__item">
      <div id="ProductInfo-{{ section.id }}" class="product__info-container{% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}
        {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'text' -%}
            <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
              {{- block.settings.text -}}
            </p>
          {%- when 'title' -%}
            <h1 class="product__title" {{ block.shopify_attributes }}>
              {{ product.title | escape }}
            </h1>
          {%- when 'price' -%}
            <div class="no-js-hidden" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
              {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
            </div>
            <div {{ block.shopify_attributes }}>
              {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div>
          {%- when 'description' -%}
            {%- if product.description != blank -%}
              <div class="product__description rte">
                {{ product.description }}
              </div>
            {%- endif -%}
          {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
          {%- when 'collapsible_tab' -%}
            <div class="product__accordion accordion" {{ block.shopify_attributes }}>
              <details>
                <summary>
                  <div class="summary__title">
                    {% render 'icon-accordion', icon: block.settings.icon %}
                    <h2 class="h4 accordion__title">
                      {{ block.settings.heading | default: block.settings.page.title }}
                    </h2>
                  </div>
                  {% render 'icon-caret' %}
                </summary>
                <div class="accordion__content rte">
                  {{ block.settings.content }}
                  {{ block.settings.page.content }}
                </div>
              </details>
            </div>
          {%- when 'quantity_selector' -%}
            <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
              <label class="form__label" for="Quantity-{{ section.id }}">
                {% comment %}{{ 'products.product.quantity.label' | t }}{% endcomment %}
              </label>

              {% comment %}<quantity-input class="quantity">{% endcomment %}
                {% comment %}<button class="quantity__button no-js-hidden" name="minus" type="button">{% endcomment %}
                  {% comment %}<span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>{% endcomment %}
                  {% comment %}{% render 'icon-minus' %}{% endcomment %}
                {% comment %}</button>{% endcomment %}
                {% comment %}<input class="quantity__input"{% endcomment %}
                    {% comment %}type="number"{% endcomment %}
                    {% comment %}name="quantity"{% endcomment %}
                    {% comment %}id="Quantity-{{ section.id }}"{% endcomment %}
                    {% comment %}min="1"{% endcomment %}
                    {% comment %}value="1"{% endcomment %}
                    {% comment %}form="product-form-{{ section.id }}"{% endcomment %}
                  {% comment %}>{% endcomment %}
                {% comment %}<button class="quantity__button no-js-hidden" name="plus" type="button">{% endcomment %}
                  {% comment %}<span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>{% endcomment %}
                  {% comment %}{% render 'icon-plus' %}{% endcomment %}
                {% comment %}</button>{% endcomment %}
              {% comment %}</quantity-input>{% endcomment %}
            </div>
          {%- when 'popup' -%}
              <modal-opener class="product-popup-modal__opener no-js-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.text | default: block.settings.page.title }}</button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.text }}</a>
          {%- when 'share' -%}
            <share-button class="share-button" {{ block.shopify_attributes }}>
              <button class="share-button__button hidden">
                {% render 'icon-share' %}
                {{ block.settings.share_label | escape }}
              </button>
              <details>
                <summary class="share-button__button">
                  {% render 'icon-share' %}
                  {{ block.settings.share_label | escape }}
                </summary>
                <div id="Product-share-{{ section.id }}" class="share-button__fallback motion-reduce">
                  <div class="field">
                    <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status">
                    </span>
                    <input type="text"
                          class="field__input"
                          id="url"
                          value="{{ shop.url | append: product.url }}"
                          placeholder="{{ 'general.share.share_url' | t }}"
                          onclick="this.select();"
                          readonly
                    >
                    <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                  </div>
                  <button class="share-button__close hidden no-js-hidden">
                    {% render 'icon-close' %}
                    <span class="visually-hidden">{{ 'general.share.close' | t }}</span>
                  </button>
                  <button class="share-button__copy no-js-hidden">
                    {% render 'icon-clipboard' %}
                    <span class="visually-hidden">{{ 'general.share.copy_to_clipboard' | t }}</span>
                  </button>
                </div>
              </details>
            </share-button>
            <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
          {%- when 'variant_picker' -%}
            {%- unless product.has_only_default_variant -%}
              {%- if block.settings.picker_type == 'button' -%}
                <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }} >
                  {%- for option in product.options_with_values -%}
                      <fieldset class="js product-form__input">
                        <legend class="form__label">{{ option.name }}</legend>
                        {%- for value in option.values -%}
                          <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                name="{{ option.name }}"
                                value="{{ value | escape }}"
                                v-model="variant_selection.option{{ option.position }}"
                                form="product-form-{{ section.id }}"
                                {% if option.selected_value == value %}checked{% endif %}
                                @change="variant_from_options"
                                :value="current_variant_id"
                          >
                          <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">
                            {{ value }}
                          </label>
                        {%- endfor -%}
                      </fieldset>
                  {%- endfor -%}
                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-radios>
                <label for="nombrePrenom">
                  Nombre de Prenom
                </label>
                {% if product.metafields.my_fields.nombre_min != 0 %}
                    <select id="nombrePrenom" v-model.number="nombre_prenom" @click="test">
                        <option v-for="{{ product.metafields.my_fields.nombre_min }}" @click="test">{{ product.metafields.my_fields.nombre_min }}</option>
                    </select>
                {% else %}
                  <select id="nombrePrenom" v-model.number="nombre_prenom">
                    <option v-for="nombre in {{ product.metafields.my_fields.nombre_max }}" >${nombre}</option>
                  </select>
                 {% endif %}
                <div v-for="(nombre_total, index) in nombre_prenom">
                  <div>
                    <div class="input-name">
                      {% if product.metafields.my_fields.option_perle %}
                        <Label :for="'prenom' + index" >Inserez votre prenom</Label>
                        <span class="gravure"></span>
                        <img class="perle-vide" src="https://cdn.shopify.com/s/files/1/0598/3721/9012/files/perle-vide.jpg?v=1631353344" alt="">
                        <svg class="gravure" height="28px" width="150px" viewBox="0 0 350 350">
                          <path id="curve" fill="transparent" d="M100,300 C198,352 468,348 499,291" />
                          <text width="500">
                            <textPath xlink:href="#curve">
                              ${prenoms_stones[index].prenom}
                            </textPath>
                          </text>
                        </svg>
                      {% else %}
                        <Label :for="'prenom' + index" >Inserez votre prenom ${nombre_total}</Label>
                      {% endif %}
                    </div>
                    <input type="text" v-bind:id="'prenom' + index" required v-model="prenoms_stones[index].prenom" :key="index">
                  </div>
                  {% if product.metafields.my_fields.option_diamant %}
                  <div class="combo-pierre">
                    <Label for="pierre-de-naissance" >Choisir la pierre de naissance</Label>
                    <div>
                      <img @click="open(index)" v-if="birthStone_selected[index].image" :src="birthStone_selected[index].image">
                      <img @click="open(index)" v-else :src="birthStones[0].image">
                      <span @click="birthStone_line_hide[index] = !birthStone_line_hide[index]" v-if="birthStone_selected[index].month">${birthStone_selected[index].month}</span>
                      <span @click="birthStone_line_hide[index] = !birthStone_line_hide[index]" v-else="">${birthStones[0].month}</span>
                    </div>
                    <div  class=" list-stones_wrapper " v-if="birthStone_line_hide[index].state == true || birthStone_line_hide[index] == true" >
                      <div class="">
                        <ul class="list-stones">
                          <li class="" v-for="(birthStone, i) in birthStones" :value="{birthStone}"  v-model="prenoms_stones[index].birthStone" @click="register_stone({birthStone}, {index})" >
                            <img :src="birthStone.image" @click="birthStone_line_hide[index] = !birthStone_line_hide[index]">
                            <p class="remove-margins" @click="birthStone_line_hide[index] = !birthStone_line_hide[index]">${birthStone.month}</p>
                          </li>
                        </ul>
                      </div>
                    </div>
                    <hr>
                  </div>
                  {% elsif product.metafields.my_fields.option_fleur %}
                  <div class="combo-flower">
                    <Label for="pierre-de-naissance" >Choisir la pierre de naissance</Label>
                    <div>
                      <img class="image_List" @click="open(index)" v-if="birthStone_selected[index].image" :src="birthStone_selected[index].image">
                      <img class="image_List" @click="open(index)" v-else :src="birthFlowers[0].image">
                      <span @click="birthStone_line_hide[index] = !birthStone_line_hide[index]" v-if="birthStone_selected[index].month">${birthStone_selected[index].month}</span>
                      <span @click="birthStone_line_hide[index] = !birthStone_line_hide[index]" v-else="">${birthFlowers[0].month}</span>
                    </div>
                     <div  class=" list-stones_wrapper " v-if="birthStone_line_hide[index].state == true || birthStone_line_hide[index] == true" >
                      <div class="">
                        <ul class="list-stones">
                          <li class="" v-for="(birthStone, i) in birthFlowers" :value="{birthStone}"  v-model="prenoms_stones[index].birthStone" @click="register_stone({birthStone}, {index})" >
                            <img class="image_List" :src="birthStone.image" @click="birthStone_line_hide[index] = !birthStone_line_hide[index]">
                            <p class="remove-margins" @click="birthStone_line_hide[index] = !birthStone_line_hide[index]">${birthStone.month}</p>
                          </li>
                        </ul>
                      </div>
                    </div>
                    <hr>
                  </div>
                  {% else product.metafields.my_fields.option_perle %}
                  {% endif %}
                </div>
              {%- else -%}
                <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                    <div class="product-form__input product-form__input--dropdown">
                      <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                        {{ option.name }}
                      </label>
                      <div class="select">
                        <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="select__select"
                          name="options[{{ option.name | escape }}]"
                          form="product-form-{{ section.id }}"
                          v-model="variant_selection.option{{ product_option.position }}"
                          @click="variant_from_options"
                        >
                          {%- for value in option.values -%}
                            <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}  @click="variant_from_options">
                              {{ value }}
                            </option>
                          {%- endfor -%}
                        </select>
                        {% render 'icon-caret' %}
                      </div>
                    </div>
                  {%- endfor -%}

                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-selects>
              {%- endif -%}

            <div class="gif-box_wrapper">
              <h3 class="title_upsell">Add Premium Package</h3>
              <div class="description_wrapper">

              <div class="gift-box_description">
                <input type="checkbox" name="gift_box" id="gift_box" v-model="checked_boite" @click="subtotal_order_box">
                <img class="gift-box_image" src="https://cdn.shopify.com/s/files/1/0598/3721/9012/files/boite-monprecieux.jpg?v=1631360424" alt="">
                <div class="gift-box_text">
                  <p>${title_boite}</p>
                  <p class="price_upsell">${price_boite} €</p>
                </div>
              </div>
              </div>
            </div>
            <div class="gif-box_wrapper">
                <h3 class="title_upsell">Special Offer! Gift a second piece</h3>
              <div class="description_wrapper">
                <div class="gift-box_description">
                  <input type="checkbox" name="gift_box" id="gift_upsell" v-model="checked_upsell" @click="subtotal_order_upsell">
                  <img class="gift-box_image" :src="img_variant_upsell" alt="">
                  <div class="gift-box_text">
                    <p>${title_upsell}</p>
                    <p class="price_upsell">${price_upsell} €</p>
                  </div>
                </div>

                <div class="options_upsell" v-if="checked_upsell">
                  <div v-for="option in options_upsell" class="product-form__input product-form__input--dropdown">
                    <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                      ${ option.name }
                    </label>
                    <div class="select">
                      <select id="Option-{{ section.id }}-{{ forloop.index0 }}" v-model="option_choosen_upsell" @click="update_upsell">
                        <option v-for="value in option.values"  >
                          ${ value }
                        </option>
                      </select>
                    </div>
                  </div>
                  <label class="label__choice-name" for="name_choice_upsell">Write a name of your choice:</label>
                  <span class="label__max-letters">(Up to 10 characters)</span>
                  <input type="text" name="name_choice_upsell" id="name_choice_upsell" v-model="name_choosen_upsell">
                  <label class="label__size-upsell" for="size_upsell">Select adjustable chain length:</label>
                  <select name="size_upsell" id="size_upsell" form="size_upsell_form" v-model="size_choosen_upsell">
                    <option value="35cm-40cm">35cm - 40cm</option>
                    <option value="40cm-45cm" selected>40cm - 45cm</option>
                    <option value="45cm-50cm">45cm - 50cm</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="subtotal_wrapper">
              <p>Subtotal : </p>
              <span>${subtotal} €</span>
            </div>
            <button v-on:click="addToCart" class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}button--secondary{% else %}button--primary{% endif %}">Ajout Panier</button>
            {% comment %}<button v-on:click="test">Test</button>{% endcomment %}

            {{ product.metafields.my_fields.product_upsell }}
          {%- endunless -%}
            <noscript class="product-form__noscript-wrapper-{{ section.id }}">
              <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                <div class="select">
                  <select name="id" id="Variants-{{ section.id }}" class="select__select" form="product-form">
                    {%- for variant in product.variants -%}
                      <option
                        {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                        {% if variant.available == false %}disabled{% endif %}
                        value="{{ variant.id }}"
                      >
                        {{ variant.title }}
                        {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                        - {{ variant.price | money | strip_html }}
                      </option>
                    {%- endfor -%}
                  </select>
                  {% render 'icon-caret' %}
                </div>
              </div>
            </noscript>
          {%- when 'buy_buttons' -%}
            <div {{ block.shopify_attributes }}>
              <product-form class="product-form">
                {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                  {% comment %}<input type="hidden" name="id" :value="current_variant_id">{% endcomment %}
                  <input type="hidden" name="quantity" value="1">
                  <input type="hidden" name="properties[Detail]" :value="detailsCommand">

                  <div class="product-form__buttons">
                    <button
                      type="submit"
                      name="add"
                      class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}button--secondary{% else %}button--primary{% endif %}"
                    {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                    @click="addToCart"
                    >
                        {%- if product.selected_or_first_available_variant.available -%}
                          {{ 'products.product.add_to_cart' | t }}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                    </button>
                    {%- if block.settings.show_dynamic_checkout -%}
                      {{ form | payment_button }}
                    {%- endif -%}
                  </div>
                {%- endform -%}
              </product-form>

              {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

              {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

              <pickup-availability class="product__pickup-availabilities no-js-hidden"
                {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                data-base-url="{{ shop.url }}{{ routes.root_url }}"
                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                data-has-only-default-variant="{{ product.has_only_default_variant }}"
              >
                <template>
                  <pickup-availability-preview class="pickup-availability-preview">
                    {% render 'icon-unavailable' %}
                    <div class="pickup-availability-info">
                      <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                      <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                    </div>
                  </pickup-availability-preview>
                </template>
              </pickup-availability>
            </div>
            <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
          {%- when 'rating' -%}
            {%- if product.metafields.reviews.rating.value != blank -%}
              {% liquid
               assign rating_decimal = 0
               assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
               if decimal >= 0.3 and decimal <= 0.7
                assign rating_decimal = 0.5
              elsif decimal > 0.7
                assign rating_decimal = 1
               endif
              %}
              <div class="rating" role="img" aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}">
                <span aria-hidden="true" class="rating-star color-icon-{{ settings.accent_icons }}" style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"></span>
              </div>
              <p class="rating-text caption">
                <span aria-hidden="true">{{ product.metafields.reviews.rating.value }} / {{ product.metafields.reviews.rating.value.scale_max }}</span>
              </p>
              <p class="rating-count caption">
                <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                <span class="visually-hidden">{{ product.metafields.reviews.rating_count }} {{ "accessibility.total_reviews" | t }}</span>
              </p>
            {%- endif -%}
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
  <product-modal id="ProductModal-{{ section.id }}" class="product-media-modal media-modal">
    <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
      <button id="ModalClose-{{ section.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>

      <div class="product-media-modal__content" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
        {%- liquid
          if product.selected_or_first_available_variant.featured_media != null
            assign media = product.selected_or_first_available_variant.featured_media
            render 'product-media', media: media, loop: section.settings.enable_video_looping, variant_image: section.settings.hide_variants
          endif
        -%}

        {%- for media in product.media -%}
          {%- liquid
            if section.settings.hide_variants and variant_images contains media.src
              assign variant_image = true
            else
              assign variant_image = false
            endif

            unless media.id == product.selected_or_first_available_variant.featured_media.id
              render 'product-media', media: media, loop: section.settings.enable_video_looping, variant_image: variant_image
            endunless
          -%}
        {%- endfor -%}
      </div>
    </div>
  </product-modal>
  {% assign popups = section.blocks | where: "type", "popup" %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div role="dialog" aria-label="{{ block.settings.text }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}
</section>


<script>

  const ProductPage = { 
    name: "Product",
    delimiters: ["${", "}"],
    data() {
      return {
        current_variant_id: "{{ product.selected_or_first_available_variant.id }}",
        variant_selection: {
          option1: "{{ product.options_with_values[0].selected_value }}",
          option2: "{{ product.options_with_values[1].selected_value }}",
          option3: "{{ product.options_with_values[2].selected_value }}",
        },
        variants: [
          {% for variant in product.variants %}
            {
              id: "{{ variant.id }}",
              available: {{ variant.available }},
              option1: "{{ variant.option1 }}",
              option2: "{{ variant.option2 }}",
              option3: "{{ variant.option3 }}",
              price: "{{ variant.price | money }}",
              {% assign img_url = variant.image.src | img_url: '500x', scale: 2 %}
              image: "{% unless img_url contains 'no-image' %}{{ img_url }}{% endunless %}"
            },
          {% endfor %}
        ],
        fallback_product_image: "{{ featured_image | img_url: '500x', scale: 2 }}",
        nombre_prenom: 1,
        show_birthstoneList: false,
        birthStones : [
          {month: 'January', image:'https://static.myka.com/option-image/f60d7fc1db2442729504be3ebcd8947b.png'},
          {month: 'February', image:'https://static.myka.com/option-image/d0309897266e4a5585d8056b417247e3.png'},
          {month: 'March', image:'https://static.myka.com/option-image/364f9831776c45aa845fa111a4e61217.png'},
          {month: 'April', image:'https://static.myka.com/option-image/57b3d1a35c3f4c938714cda3dbf5b497.png'},
          {month: 'May', image:'https://static.myka.com/option-image/717f56cc04a84ea887595d85513dd91e.png'},
          {month: 'June', image:'https://static.myka.com/option-image/2d389886eeb44babb9b7f73f82d599f4.png'},
          {month: 'July', image:'https://static.myka.com/option-image/393a2749ed66461ea30336070ec36beb.png'},
          {month: 'August', image:'https://static.myka.com/option-image/4e931e3e539243bf85d0d8f37bfb33e3.png'},
          {month: 'September', image:'https://static.myka.com/option-image/f0224ea1a2994198b3786ded393a9f6a.png'},
          {month: 'October', image:'https://static.myka.com/option-image/ec43048dff324a3784fd62c14356fe4e.png'},
          {month: 'November', image:'https://static.myka.com/option-image/2c945eecb0e94f1db0c8b10dc82dfbab.png'},
          {month: 'December', image:'https://static.myka.com/option-image/d185da444bf14c8885889233bcc0945e.png'}
          ],
        birthFlowers:  [
          {month: 'January', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/janvier_-_perce_neige.png?v=1631303466'},
          {month: 'February', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/fevrier_-_iris.png?v=1631303466'},
          {month: 'March', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/mars_-_jonquille.png?v=1631303466'},
          {month: 'April', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/avril_-_margueritte.png?v=1631303466'},
          {month: 'May', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/mai_-aubepine.png?v=1631303466'},
          {month: 'June', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/juin_-_rose.png?v=1631303466'},
          {month: 'July', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/juillet_-_lotus.png?v=1631303466'},
          {month: 'August', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/aout_-_coquelicot.png?v=1631303466'},
          {month: 'September', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/septembre_-_gloire_du_matin.png?v=1631303466'},
          {month: 'October', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/octobre_-_cosmos.png?v=1631303466'},
          {month: 'November', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/novembre_-_chrysantheme.png?v=1631303466'},
          {month: 'December', image:'https://cdn.shopify.com/s/files/1/0598/3721/9012/files/decembre_-_houx.png?v=1631303466'}
        ],
        birthStone_line_hide: [
          {% if product.metafields.my_fields.nombre_min != 0 %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_min) %}
              {state : false},
            {% endfor %}
          {% else %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_max) %}
              {state : false},
            {% endfor %}
          {% endif %}
          ],
        birthStone_selected: [
          {% if product.metafields.my_fields.nombre_min != 0 %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_min) %}
              {month: '', image:''},
            {% endfor %}
          {% else %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_max) %}
            {month: '', image:''},
            {% endfor %}
          {% endif %}
        ],
        prenoms_stones: [
          {% if product.metafields.my_fields.nombre_min != 0 %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_min) %}
              {prenom: '', birthStone: ''},
            {% endfor %}
          {% else %}
            {% for nombre_max in (1..product.metafields.my_fields.nombre_max) %}
            {prenom: '', birthStone: ''},
            {% endfor %}
          {% endif %}
        ],
        detailsCommand: [''],
        photo_upsell_src:'',
        title_upsell:'',
        price_upsell:'',
        checked_upsell: false,
        variants_upsell: {},
        options_upsell: {},
        name_choosen_upsell:'',
        size_choosen_upsell:'',
        option_choosen_upsell:'',
        current_variant_id_upsell:'',
        img_variant_upsell:'',
        photo_boite_src:'',
        title_boite:'',
        price_boite:'',
        checked_boite: false,
        variants_boite:{},
        subtotal: "{{ product.selected_or_first_available_variant.price }}"/100,

      }
    },
    computed: {
      current_variant() {
        return this.variants.find(variant => variant.id == this.current_variant_id);
      }
    },
    created() {

      //Gets the product of the page
      axios.get("/products/{{ product.handle }}.js").then((results) => {
         console.log(results);
      });

      {% if product.metafields.my_fields.option_diamant %}
        this.birthStone_selected[0].month = this.birthStones[0].month;
        this.birthStone_selected[0].image = this.birthStones[0].image;
      {% elsif product.metafields.my_fields.option_fleur %}
        this.birthStone_selected[0].month = this.birthFlowers[0].month;
        this.birthStone_selected[0].image = this.birthFlowers[0].image;
      {% else product.metafields.my_fields.option_perle %}
        this.birthStone_selected[0].month = this.birthStones[0].month;
        this.birthStone_selected[0].image = this.birthStones[0].image;
      {% endif %}

      for (let i = 0; i < {{ product.metafields.my_fields.nombre_max }}; i++) {
          this.birthStone_line_hide[i] = false;
      };

      //Gets the product upsell choosen in the dashboard admin
      axios.get("/products/{{ product.metafields.my_fields.nom_produit_upsell }}.js").then((results) => {
          console.log(results);

          this.img_variant_upsell = results.data.featured_image;
          this.title_upsell = results.data.title;
          this.price_upsell = results.data.price/100;
          this.variants_upsell = results.data.variants;
        this.options_upsell = results.data.options;
        console.log(this.price_upsell);
      });

      //Gets the gift box upsell (hard coded)
      axios.get("/products/boite-a-bijoux-mon-precieux.js").then((results) => {
          console.log(results);
          this.photo_boite_src= results.data.featured_image;
          this.title_boite= results.data.title;
          this.price_boite= results.data.price/100;
          this.variants_boite = results.data.variants;
          console.log(this.price_boite);
      });

      axios.get("/products.json?product_id={{ product.metafields.my_fields.product_upsell }}").then((results) => {
        console.log(results);
      });

      },
    methods: {
      variant_from_options() {
        const variant = this.variants.find((variant) => {
          var match = true;
          if(variant.option1 != '') {
            match = variant.option1 == this.variant_selection.option1
          }
          if(match && variant.option2 != '') {
            match = variant.option2 == this.variant_selection.option2
          }
          if(match && variant.option3 != '') {
            match = variant.option3 == this.variant_selection.option3
          }
          return match;
        });
        this.current_variant_id = variant.id;
        console.log(`voici mon current_variant_id : ${this.current_variant_id}`)
      },
      afficher_pierre(index) {
        this.isActive = !this.isActive;

        console.log(index);
      },
      register_stone(value, index) {
        this.prenoms_stones[index.index].birthStone = value.birthStone.month;
        // thi.birthStone_selected.map( item => {
        //   console.log(item);
        // });
        this.birthStone_selected[index.index].month = value.birthStone.month;
        this.birthStone_selected[index.index].image = value.birthStone.image;
        console.log(this.active);
      },
      update_upsell() {
        const variant = this.variants_upsell.find((variant) => {

          let match = true;
          if(variant.option1 != '') {
            return variant.option1 == this.option_choosen_upsell
          }

          if(match && variant.option2 != '') {
            return variant.option2 == this.option_choosen_upsell
          }
          if(match && variant.option3 != '') {
            return variant.option3 == this.option_choosen_upsell
          }
          return variant;
        })
        this.current_variant_id_upsell = variant.id;
        this.img_variant_upsell = variant.featured_image.src;

        console.log(variant);
        console.log(this.current_variant_id_upsell);
        console.log(this.img_variant_upsell);
        },
      addToCart() {
        // const prenoms = this.prenoms_stones.prenom;
        // const birthStones = this.prenoms_stones.birthStone;
        // let options = [];
        let data = {};
        let variants_upsell;

        

        if (this.checked_upsell === true && this.checked_boite === true) {
           data = {
            items: [
              {
                id: this.current_variant_id,
                quantity: 1,
                properties: {
                  Details: this.detailsCommand
                },
              },
              {
              id: 40542477910212,
              quantity: 1,
              },
              {
              id: this.current_variant_id_upsell,
              quantity: 1,
                properties: {
                  Details: {
                    name: this.name_choosen_upsell,
                    size: this.size_choosen_upsell,
                    color: this.option_choosen_upsell,
                  }
                }
              },
            ]
          };
        } else if (this.checked_upsell === true) {
           data = {
            items: [
              {
                id: this.current_variant_id,
                quantity: 1,
                properties: {
                  Details: this.detailsCommand
                },
              },
              {
              id: this.current_variant_id_upsell,
              quantity: 1,
              properties: {
                Details: {
                  name: this.name_choosen_upsell,
                  size: this.size_choosen_upsell,
                  color: this.option_choosen_upsell,
                }
              }
              },
            ]
          };
        } else if (this.checked_boite === true) {
           data = {
            items: [
              {
                id: this.current_variant_id,
                quantity: 1,
                properties: {
                  Details: this.detailsCommand
                },
              },
              {
              id: this.variants_boite[0].id,
              quantity: 1,
              },
            ]
          };
        } else {
           data = {
            items: [
              {
                id: this.current_variant_id,
                quantity: 1,
                properties: {
                  Details: this.detailsCommand
                },
              },
            ]
          };
        }
      
        
        
        this.prenoms_stones.forEach( (prenom_pierre, index) => {
          if(prenom_pierre.prenom != '') {
            let numero = index + 1;
            this.detailsCommand.push( prenom_pierre)
          }
        });

          axios
          .post("/cart/add.js", data)
          .then((response) => {
            console.log(response)
          })
          .catch((error) => {
            console.log(error);
          });

      },
      open(index){
        console.log(index);
        for (let i = 0; i < 3; i++) {
          if(i != index) {
            this.birthStone_line_hide[i] = false;
          }          
        };
        this.birthStone_line_hide[index]= !this.birthStone_line_hide[index];
        console.log(this.birthStone_line_hide);
      },



      test() {
        console.log("test");
        console.log(this.nombre_prenom)

      },

      subtotal_order_box() {

        this.checked_boite = !this.checked_boite;

        if ( this.checked_boite == true ) {
          this.subtotal+= (this.price_boite) ;
        } else if(this.checked_boite == false) {
          this.subtotal-= (this.price_boite);
        }


        console.log(this.checked_boite);
        console.log(this.subtotal);
      },

      subtotal_order_upsell() {

        this.checked_upsell = !this.checked_upsell;

        if (this.checked_upsell == true) {
          this.subtotal += (this.price_upsell);
        } else if(this.checked_upsell == false) {
          this.subtotal-= (this.price_upsell);
        }
        console.log(this.checked_upsell);
        console.log(this.subtotal);
      }

    }
  }

  Vue.createApp(ProductPage).mount('#productPage');

</script>












{% javascript %}
  class ProductModal extends ModalDialog {
    constructor() {
      super();
    }

    hide() {
      super.hide();
      window.pauseAllMedia();
    }

    show(opener) {
      super.show(opener);
      this.showActiveMedia();
    }

    showActiveMedia() {
      this.querySelectorAll(`[data-media-id]:not([data-media-id="${this.openedBy.getAttribute("data-media-id")}"])`).forEach((element) => {
          element.classList.remove('active');
        }
      )
      const activeMedia = this.querySelector(`[data-media-id="${this.openedBy.getAttribute("data-media-id")}"]`);
      const activeMediaTemplate = activeMedia.querySelector('template');
      const activeMediaContent = activeMediaTemplate ? activeMediaTemplate.content : null;
      activeMedia.classList.add('active');
      activeMedia.scrollIntoView();

      const container = this.querySelector('[role="document"]');
      container.scrollLeft = (activeMedia.width - container.clientWidth) / 2;

      if (activeMedia.nodeName == 'DEFERRED-MEDIA' && activeMediaContent && activeMediaContent.querySelector('.js-youtube'))
        activeMedia.loadContent();
    }
  }

  customElements.define('product-modal', ProductModal);
{% endjavascript %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return (msie > 0 || trident > 0);
    }

    if (!isIE()) return;
    const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
    const noScriptInputWrapper = document.createElement('div');
    const variantSwitcher = document.querySelector('variant-radios[data-section="{{ section.id }}"]') || document.querySelector('variant-selects[data-section="{{ section.id }}"]');
    noScriptInputWrapper.innerHTML = document.querySelector('.product-form__noscript-wrapper-{{ section.id }}').textContent;
    variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

    document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function(event) {
      hiddenInput.value = event.currentTarget.value;
    });
  });
</script>

{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

<script type="application/ld+json">
  {
    "@context": "http://schema.org/",
    "@type": "Product",
    "name": {{ product.title | json }},
    "url": {{ shop.url | append: product.url | json }},
    {%- if product.selected_or_first_available_variant.featured_media -%}
      {%- assign media_size = product.selected_or_first_available_variant.featured_media.preview_image.width | append: 'x' -%}
      "image": [
        {{ product.selected_or_first_available_variant.featured_media | img_url: media_size | prepend: "https:" | json }}
      ],
    {%- endif -%}
    "description": {{ product.description | strip_html | json }},
    {%- if product.selected_or_first_available_variant.sku != blank -%}
      "sku": {{ product.selected_or_first_available_variant.sku | json }},
    {%- endif -%}
    "brand": {
      "@type": "Thing",
      "name": {{ product.vendor | json }}
    },
    "offers": [
      {%- for variant in product.variants -%}
        {
          "@type" : "Offer",
          {%- if variant.sku != blank -%}
            "sku": {{ variant.sku | json }},
          {%- endif -%}
          "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
          "price" : {{ variant.price | divided_by: 100.00 | json }},
          "priceCurrency" : {{ cart.currency.iso_code | json }},
          "url" : {{ shop.url | append: variant.url | json }}
        }{% unless forloop.last %},{% endunless %}
      {%- endfor -%}
    ]
  }
</script>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    }
  ]
}
{% endschema %}
